---
import type { Props } from '@astrojs/starlight/props'
import StarlightPage, { type StarlightPageProps } from '@astrojs/starlight/components/StarlightPage.astro'
import { getSession } from 'auth-astro/server';
import mainpage from '../assets/mainpage.webp';

const session = await getSession(Astro.request)

const frontmatter: StarlightPageProps['frontmatter'] = {
  title: session ? `Hi ${session.user?.name}! Welcome to Appvision Documentation` : 'Welcome to Appvision Documentation',
  template: 'splash',
  hero: {
    tagline: session ? 'Find all the informations you need to setup your brand new AppVision project !' : 'Please sign in / up first.',
    image: {
      file: mainpage
    },
    actions: [
      session ? {
        text: 'Get started',
        link: '/welcome',
        icon: 'right-arrow',
        variant: 'primary'
      } : {
      text: 'Sign in',
        link: '/auth/signin',
        icon: 'right-arrow',
        variant: 'primary'
      },
    ]
  }
}
---

<StarlightPage {frontmatter}>
  {
    session && (
      <sign-out>
        <button class="action">Sign out</button>
      </sign-out>
    )
  }
</StarlightPage>

<script>
  import { signOut } from 'auth-astro/client'

  class SignOut extends HTMLElement {
    btn = this.querySelector('button')

    constructor() {
      super()
      this.btn?.addEventListener('click', () => signOut({ prefix: '/auth' }))
    }
  }

  customElements.define('sign-out', SignOut)
</script>

<style>
  .action {
		gap: 0.5em;
		align-items: center;
		border-radius: 1rem;
		padding: 0.75rem 1.5rem;
		line-height: 1.1875;
		text-decoration: none;
		font-size: var(--sl-text-sm);
    font-weight: bold;
		background: var(--sl-color-red-high);
		color: var(--sl-color-black);
	}
</style>
